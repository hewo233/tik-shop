// Code generated by hertz generator.

package user

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	base "github.com/hewo/tik-shop/route/biz/model/hewo/tikshop/route/base"
	user "github.com/hewo/tik-shop/route/biz/model/hewo/tikshop/route/user"
)

// GetUser .
// @router /api/user/:id [GET]
func GetUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.GetUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.UserResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateUser .
// @router /api/user/:id [PUT]
func UpdateUser(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.UpdateUserRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(user.UserResponse)

	c.JSON(consts.StatusOK, resp)
}

// Register .
// @router /api/user/register [POST]
func Register(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.RegisterRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.MessageResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdatePassword .
// @router /api/user/:id/password [PUT]
func UpdatePassword(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.UpdatePasswordRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(base.MessageResponse)

	c.JSON(consts.StatusOK, resp)
}
