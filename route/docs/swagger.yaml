basePath: /
definitions:
  base.MessageResponse:
    properties:
      message:
        description: Return status description
        type: string
    type: object
  user.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  user.LoginResponse:
    properties:
      token:
        type: string
    type: object
  user.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  user.UpdatePasswordRequest:
    properties:
      id:
        type: integer
      password:
        type: string
    type: object
  user.UpdateUserRequest:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  user.UserResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  user.VerifyRequest:
    type: object
  user.VerifyResponse:
    properties:
      authorized:
        type: boolean
    type: object
host: localhost:8888
info:
  contact:
    name: TikShop 开发团队
    url: https://github.com/hewo/tik-shop
  description: TikShop 的 API 服务，用于处理相关业务逻辑。
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: TikShop API
  version: "1.0"
paths:
  /api/auth/admin/login:
    post:
      consumes:
      - application/json
      description: 管理员通过用户名和密码进行登录，返回登录成功的管理员信息。
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "400":
          description: Invalid request or login failed
          schema:
            type: string
      summary: user AdminLogin
      tags:
      - user
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: 通过用户名和密码进行用户登录，返回登录成功的用户信息。
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
        "400":
          description: Invalid request or login failed
          schema:
            type: string
      summary: user log
      tags:
      - user
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: 注册新用户，返回用户基本信息
      parameters:
      - description: Register user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            type: string
        "400":
          description: Invalid request or validation failed
          schema:
            type: string
      summary: user Register
      tags:
      - user
  /api/auth/verify:
    get:
      consumes:
      - application/json
      description: 验证用户的身份信息，返回验证结果。
      parameters:
      - description: Verify request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Verification successful
          schema:
            $ref: '#/definitions/user.VerifyResponse'
        "400":
          description: Invalid request or verification failed
          schema:
            type: string
      summary: user verify
      tags:
      - user
  /api/cart:
    delete:
      responses: {}
    get:
      responses: {}
    post:
      responses: {}
  /api/cart/:productId:
    delete:
      responses: {}
    put:
      responses: {}
  /api/order:
    post:
      responses: {}
  /api/order/:orderId:
    get:
      responses: {}
  /api/order/:orderId/pay:
    post:
      responses: {}
  /api/orders:
    get:
      responses: {}
  /api/orders/:orderId/cancel:
    post:
      responses: {}
  /api/product/:id:
    delete:
      responses: {}
    get:
      responses: {}
    put:
      responses: {}
  /api/products:
    get:
      responses: {}
    post:
      responses: {}
  /api/user/:id:
    get:
      consumes:
      - application/json
      description: 根据用户 ID 获取详细的用户信息
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User information retrieved successfully
          schema:
            type: string
        "400":
          description: Invalid request or user ID not found
          schema:
            type: string
      summary: user GetUserInfoByID
      tags:
      - user
    put:
      consumes:
      - application/json
      description: 根据用户 ID 更新用户的详细信息
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User information updated successfully
          schema:
            $ref: '#/definitions/user.UserResponse'
        "400":
          description: Invalid request or validation failed
          schema:
            type: string
      summary: user UpdateUser
      tags:
      - user
  /api/user/:id/password:
    put:
      consumes:
      - application/json
      description: 根据用户 ID 更新用户的密码
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Password update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdatePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            $ref: '#/definitions/base.MessageResponse'
        "400":
          description: Invalid request or validation failed
          schema:
            type: string
      summary: user UpdatePassword
      tags:
      - user
  /ping:
    get:
      consumes:
      - application/json
      description: 用于测试服务器是否正常响应，返回 "pong" 消息
      produces:
      - application/json
      responses:
        "200":
          description: '返回 message: pong 的 JSON 响应'
          schema:
            additionalProperties: true
            type: object
      summary: 测试接口
schemes:
- http
swagger: "2.0"
